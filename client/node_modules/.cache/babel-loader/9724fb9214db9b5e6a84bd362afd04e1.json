{"ast":null,"code":"var _jsxFileName = \"/Users/April/Documents/Fall 2020/6.S080/pool-testing-schedule/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { enUS } from 'date-fns/locale';\nimport { Calendar } from 'react-nice-dates';\nimport FileUpload from './FileUpload';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport 'react-nice-dates/build/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nconst schema = yup.object({\n  // file: yup.string().required(),\n  numPeople: yup.number().required(),\n  numTests: yup.number().required(),\n  numTestDays: yup.number().required(),\n  numTestHours: yup.number().required(),\n  numStaff: yup.number().required(),\n  testTime: yup.number().required(),\n  numWeeks: yup.number().required(),\n  maxGroups: yup.number().required(),\n  startDate: yup.date().required()\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scheduleMap: '',\n      startDate: new Date(),\n      fileUploaded: false,\n      showModal: false,\n      currentDate: new Date()\n    };\n\n    this.handleSubmit = async values => {\n      // values.preventDefault();\n      this.setState({\n        startDate: values.startDate\n      });\n      axios.post('/api/schedule/inputs', values, {}).then(res => {\n        this.setState({\n          scheduleMap: new Map(JSON.parse(res.data.schedule))\n        });\n        console.log(this.state.scheduleMap.keys());\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDayClick = date => {\n      // console.log(new Date(date));\n      const selectedDate = new Date(date); // console.log(selectedDate.toLocaleDateString(\"en-US\"))\n\n      if (this.state.scheduleMap.has(selectedDate.toLocaleDateString(\"en-US\"))) {\n        console.log(\"this day is part of schedule\");\n        this.setState({\n          showModal: true\n        });\n        this.setState({\n          currentDate: selectedDate\n        });\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.setFileUpload = () => {\n      this.setState({\n        fileUploaded: true\n      });\n    };\n  }\n\n  componentDidMount() {// this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Testing Scheduler\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FileUpload, {\n      onSubmit: this.setFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), this.state.fileUploaded && /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        startDate: new Date()\n      },\n      validationSchema: schema,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      // handleBlur,\n      values,\n      touched,\n      // isValid,\n      errors,\n      setFieldValue\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, \"Number of people at location\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numPeople\",\n      id: \"validationFormik01\",\n      onChange: handleChange,\n      isValid: touched.numPeople && !errors.numPeople,\n      isInvalid: !!errors.numPeople,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, errors.numPeople))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, \"Cap of PCR tests processed/day\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numTests\",\n      id: \"validationFormik02\",\n      onChange: handleChange,\n      isValid: touched.numTests && !errors.numTests,\n      isInvalid: !!errors.numTests,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, errors.numTests))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \"# testing days in a week\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numTestDays\",\n      id: \"validationFormik03\",\n      onChange: handleChange,\n      isValid: touched.numTestDays && !errors.numTestDays,\n      isInvalid: !!errors.numTestDays,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, errors.numTestDays))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"# testing hours in a day\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numTestHours\",\n      id: \"validationFormik04\",\n      onChange: handleChange,\n      isValid: touched.numTestHours && !errors.numTestHours,\n      isInvalid: !!errors.numTestHours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, errors.numTestHours))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, \"# staff\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numStaff\",\n      id: \"validationFormik05\",\n      onChange: handleChange,\n      isValid: touched.numStaff && !errors.numStaff,\n      isInvalid: !!errors.numStaff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, errors.numStaff))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }, \"Time per test in hours\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"testTime\",\n      id: \"validationFormik06\",\n      onChange: handleChange,\n      isValid: touched.testTime && !errors.testTime,\n      isInvalid: !!errors.testTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, errors.testTime))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, \"Trial length in weeks\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numWeeks\",\n      id: \"validationFormik07\",\n      onChange: handleChange,\n      isValid: touched.numWeeks && !errors.numWeeks,\n      isInvalid: !!errors.numWeeks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, errors.numWeeks))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, \"Max groups testing per day\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"maxGroups\",\n      id: \"validationFormik08\",\n      onChange: handleChange,\n      isValid: touched.maxGroups && !errors.maxGroups,\n      isInvalid: !!errors.maxGroups,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, errors.maxGroups))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, \"Starting date\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      id: \"validationFormilk09\",\n      selected: values.startDate,\n      dateFormat: \"MMMM d, yyyy\",\n      className: \"form-control\",\n      name: \"startDate\",\n      onChange: date => setFieldValue('startDate', date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \"Create Schedule\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      onDayClick: this.handleDayClick,\n      locale: enUS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, this.state.currentDate.toDateString())), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, \"Save Changes\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/April/Documents/Fall 2020/6.S080/pool-testing-schedule/client/src/App.js"],"names":["React","Component","enUS","Calendar","FileUpload","Form","Button","Modal","Col","Formik","yup","axios","DatePicker","schema","object","numPeople","number","required","numTests","numTestDays","numTestHours","numStaff","testTime","numWeeks","maxGroups","startDate","date","App","state","scheduleMap","Date","fileUploaded","showModal","currentDate","handleSubmit","values","setState","post","then","res","Map","JSON","parse","data","schedule","console","log","keys","catch","err","handleDayClick","selectedDate","has","toLocaleDateString","handleClose","setFileUpload","componentDidMount","render","handleChange","touched","errors","setFieldValue","toDateString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { enUS } from 'date-fns/locale';\nimport { Calendar } from 'react-nice-dates';\nimport FileUpload from './FileUpload';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\"\n\nimport 'react-nice-dates/build/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nconst schema = yup.object({\n  // file: yup.string().required(),\n  numPeople: yup.number().required(),\n  numTests: yup.number().required(),\n  numTestDays: yup.number().required(),\n  numTestHours: yup.number().required(),\n  numStaff: yup.number().required(),\n  testTime: yup.number().required(),\n  numWeeks: yup.number().required(),\n  maxGroups: yup.number().required(),\n  startDate: yup.date().required()\n});\n\nclass App extends Component {\n  state = {\n    scheduleMap: '',\n    startDate: new Date(),\n    fileUploaded: false,\n    showModal: false,\n    currentDate: new Date()\n  };\n  \n  componentDidMount() {\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n  \n  handleSubmit = async (values) => {\n    // values.preventDefault();\n    this.setState({startDate: values.startDate});\n    axios.post('/api/schedule/inputs', values, {}).then(res => {\n      this.setState({scheduleMap: new Map(JSON.parse(res.data.schedule))});\n      console.log(this.state.scheduleMap.keys());\n    }).catch(err => console.log(err));\n  };\n\n  handleDayClick = date => {\n    // console.log(new Date(date));\n    const selectedDate = new Date(date);\n    // console.log(selectedDate.toLocaleDateString(\"en-US\"))\n    if (this.state.scheduleMap.has(selectedDate.toLocaleDateString(\"en-US\"))) {\n      console.log(\"this day is part of schedule\");\n      this.setState({showModal: true});\n      this.setState({currentDate: selectedDate});\n    }\n  };\n\n  handleClose = () => {\n    this.setState({showModal: false});\n  }\n\n  setFileUpload = () => {\n    this.setState({fileUploaded: true});\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n          Testing Scheduler\n          </p>\n        </header>\n        <div className=\"body\">\n          <div className=\"sidebar\">\n          <FileUpload onSubmit={this.setFileUpload}/>\n          {this.state.fileUploaded &&\n            <Formik \n              initialValues={{startDate: new Date()}}\n              validationSchema={schema} onSubmit={this.handleSubmit}>\n              {({\n                handleSubmit,\n                handleChange,\n                // handleBlur,\n                values,\n                touched,\n                // isValid,\n                errors,\n                setFieldValue\n              }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column>\n                        Number of people at location\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numPeople\"\n                          id=\"validationFormik01\"\n                          onChange={handleChange}\n                          isValid={touched.numPeople && !errors.numPeople}\n                          isInvalid={!!errors.numPeople}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numPeople}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Cap of PCR tests processed/day\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numTests\"\n                          id=\"validationFormik02\"\n                          onChange={handleChange}\n                          isValid={touched.numTests && !errors.numTests}\n                          isInvalid={!!errors.numTests}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numTests}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        # testing days in a week\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numTestDays\"\n                          id=\"validationFormik03\"\n                          onChange={handleChange}\n                          isValid={touched.numTestDays && !errors.numTestDays}\n                          isInvalid={!!errors.numTestDays}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numTestDays}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        # testing hours in a day\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numTestHours\"\n                          id=\"validationFormik04\"\n                          onChange={handleChange}\n                          isValid={touched.numTestHours && !errors.numTestHours}\n                          isInvalid={!!errors.numTestHours}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numTestHours}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        # staff\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numStaff\"\n                          id=\"validationFormik05\"\n                          onChange={handleChange}\n                          isValid={touched.numStaff && !errors.numStaff}\n                          isInvalid={!!errors.numStaff}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numStaff}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Time per test in hours\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"testTime\"\n                          id=\"validationFormik06\"\n                          onChange={handleChange}\n                          isValid={touched.testTime && !errors.testTime}\n                          isInvalid={!!errors.testTime}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.testTime}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Trial length in weeks\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numWeeks\"\n                          id=\"validationFormik07\"\n                          onChange={handleChange}\n                          isValid={touched.numWeeks && !errors.numWeeks}\n                          isInvalid={!!errors.numWeeks}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numWeeks}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Max groups testing per day\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"maxGroups\"\n                          id=\"validationFormik08\"\n                          onChange={handleChange}\n                          isValid={touched.maxGroups && !errors.maxGroups}\n                          isInvalid={!!errors.maxGroups}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.maxGroups}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Starting date\n                      </Form.Label>\n                      <Col>\n                        <DatePicker \n                        id=\"validationFormilk09\"\n                        selected={values.startDate}\n                        dateFormat=\"MMMM d, yyyy\"\n                        className=\"form-control\"\n                        name=\"startDate\"\n                        onChange={date => setFieldValue('startDate', date)}\n                        />\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                <Button type=\"submit\">Create Schedule</Button>\n              </Form>\n              )}\n            </Formik>}\n          </div>\n          <div className=\"calendar\">\n            <Calendar onDayClick={this.handleDayClick} locale={enUS} />\n          </div>\n          <Modal show={this.state.showModal} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.currentDate.toDateString()}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.handleClose}>\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}