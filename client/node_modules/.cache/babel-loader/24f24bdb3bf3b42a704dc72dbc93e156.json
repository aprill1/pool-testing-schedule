{"ast":null,"code":"var _jsxFileName = \"/Users/April/Documents/Fall 2020/6.S080/pool-testing-schedule/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { enGB } from 'date-fns/locale';\nimport { DatePickerCalendar } from 'react-nice-dates';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport 'react-nice-dates/build/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nconst schema = yup.object({\n  file: yup.string().required(),\n  numPeople: yup.number().required(),\n  numTests: yup.number().required()\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      // e.preventDefault();\n      console.log();\n    };\n  }\n\n  componentDidMount() {} // this.callApi()\n  //   .then(res => this.setState({ response: res.express }))\n  //   .catch(err => console.log(err));\n  // callApi = async () => {\n  //   const response = await fetch('/api/hello');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n  // handleSubmit = async e => {\n  //   e.preventDefault();\n  //   const response = await fetch('/api/world', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ post: this.state.post }),\n  //   });\n  //   const body = await response.text();\n  //   this.setState({ responseToPost: body });\n  // };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Testing Scheduler\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        numPeople: ''\n      },\n      validationSchema: schema,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      required: true,\n      className: \"position-relative\",\n      label: \"Upload CSV\",\n      name: \"file\",\n      id: \"validationFormik01\",\n      onChange: handleChange,\n      isInvalid: !!errors.file,\n      feedback: errors.file,\n      feedbackTooltip: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, \"Number of people at location\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numPeople\",\n      id: \"validationFormik02\",\n      onChange: handleChange,\n      isValid: touched.numPeople && !errors.numPeople,\n      isInvalid: !!errors.numPeople,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, errors.numPeople))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, \"Cap of PCR tests processed/day\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"numTests\",\n      id: \"validationFormik03\",\n      onChange: handleChange,\n      isValid: touched.numTests && !errors.numTests,\n      isInvalid: !!errors.numTests,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, errors.numTests)))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Create Schedule\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DatePickerCalendar, {\n      locale: enGB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/April/Documents/Fall 2020/6.S080/pool-testing-schedule/client/src/App.js"],"names":["React","Component","enGB","DatePickerCalendar","Form","Button","Col","Formik","yup","schema","object","file","string","required","numPeople","number","numTests","App","state","response","post","responseToPost","handleSubmit","e","console","log","componentDidMount","render","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { enGB } from 'date-fns/locale';\nimport { DatePickerCalendar } from 'react-nice-dates';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport 'react-nice-dates/build/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst schema = yup.object({\n  file: yup.string().required(),\n  numPeople: yup.number().required(),\n  numTests: yup.number().required()\n});\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n  \n  // callApi = async () => {\n  //   const response = await fetch('/api/hello');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n    \n  //   return body;\n  // };\n  \n  // handleSubmit = async e => {\n  //   e.preventDefault();\n  //   const response = await fetch('/api/world', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ post: this.state.post }),\n  //   });\n  //   const body = await response.text();\n    \n  //   this.setState({ responseToPost: body });\n  // };\n\n  handleSubmit = async e => {\n    // e.preventDefault();\n    console.log()\n  }\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n          Testing Scheduler\n          </p>\n        </header>\n        <div className=\"body\">\n          <div className=\"sidebar\">\n            <Formik \n              initialValues={{\n                numPeople: '',\n              }}\n              validationSchema={schema} onSubmit={this.handleSubmit}>\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.File\n                  required\n                  className=\"position-relative\" \n                  label=\"Upload CSV\"\n                  name=\"file\"\n                  id=\"validationFormik01\"\n                  onChange={handleChange}\n                  isInvalid={!!errors.file}\n                  feedback={errors.file}\n                  feedbackTooltip\n                />\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column>\n                        Number of people at location\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numPeople\"\n                          id=\"validationFormik02\"\n                          onChange={handleChange}\n                          isValid={touched.numPeople && !errors.numPeople}\n                          isInvalid={!!errors.numPeople}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numPeople}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Label column>\n                        Cap of PCR tests processed/day\n                      </Form.Label>\n                      <Col>\n                        <Form.Control \n                          type=\"number\"\n                          name=\"numTests\"\n                          id=\"validationFormik03\"\n                          onChange={handleChange}\n                          isValid={touched.numTests && !errors.numTests}\n                          isInvalid={!!errors.numTests}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.numTests}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                <Button type=\"submit\">Create Schedule</Button>\n              </Form>\n              )}\n            </Formik>\n            {/* <form onSubmit={this.handleSubmit}>\n              <p>\n                <strong>Upload CSV</strong>\n              </p>\n              <input\n                type=\"text\"\n                value={this.state.post}\n                onChange={e => this.setState({ post: e.target.value })}\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n            <p>{this.state.responseToPost}</p> */}\n          </div>\n          <div className=\"calendar\">\n            <DatePickerCalendar locale={enGB} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}